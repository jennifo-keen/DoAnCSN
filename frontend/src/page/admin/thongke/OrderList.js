import React, { useState, useEffect, useCallback } from 'react';
import './OrderList.scss';

function OrderList() {
  const [orders, setOrders] = useState([]);
  const [page, setPage] = useState(1);
  const [totalPages, setTotalPages] = useState(1);
  const limit = 9;

  const formatPrice = (price) => {
    return price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, '.');
  };

  const fetchOrders = useCallback(() => {
    console.log('B·∫Øt ƒë·∫ßu fetchOrders');
    fetch(`http://localhost:5000/api/orders?page=${page}&limit=${limit}`)
      .then((res) => res.json())
      .then((data) => {
        console.log('D·ªØ li·ªáu t·ª´ server:', data);
        setOrders(Array.isArray(data.orders) ? data.orders : []);
        setTotalPages(data.totalPages || 1);
      })
      .catch((err) => {
        console.error('L·ªói khi l·∫•y d·ªØ li·ªáu:', err);
        setOrders([]);
        setTotalPages(1);
      })
      .finally(() => {
        console.log('fetchOrders ho√†n t·∫•t');
      });
  }, [page, limit]);

  useEffect(() => {
    fetchOrders();
  }, [fetchOrders]);

  const handlePaymentStatusChange = async (orderId, newStatus) => {
    try {
      console.log('Thay ƒë·ªïi tr·∫°ng th√°i:', { orderId, newStatus });
      const response = await fetch(`http://localhost:5000/api/orders/${orderId}`, {
        method: 'PATCH',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ payment_status: newStatus }),
      });

      if (response.ok) {
        const updatedOrder = await response.json();
        console.log('Ph·∫£n h·ªìi t·ª´ server:', updatedOrder);

        // Hi·ªÉn th·ªã th√¥ng b√°o ƒë∆°n gi·∫£n b·∫±ng window.alert
        if (window.confirm('Thay ƒë·ªïi tr·∫°ng th√°i th√†nh c√¥ng!')) {
          console.log('Ng∆∞·ªùi d√πng nh·∫•n OK ƒë·ªÉ v·ªÅ trang ch·ªß');
          // S·ª≠ d·ª•ng window.location.href ƒë·ªÉ ƒëi·ªÅu h∆∞·ªõng
          setTimeout(() => {
            window.location.href = '/admin/orderlist';
          }, 100);
        }
      } else {
        console.error('C·∫≠p nh·∫≠t th·∫•t b·∫°i, status:', response.status);
        alert('C·∫≠p nh·∫≠t tr·∫°ng th√°i th·∫•t b·∫°i. Vui l√≤ng th·ª≠ l·∫°i!');
      }
    } catch (err) {
      console.error('L·ªói khi c·∫≠p nh·∫≠t tr·∫°ng th√°i:', err);
      alert('C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t tr·∫°ng th√°i!');
    }
  };

  const handlePreviousPage = () => {
    if (page > 1) setPage(page - 1);
  };

  const handleNextPage = () => {
    if (page < totalPages) setPage(page + 1);
  };

  return (
    <div className="apl-container">
      <div className="apl-menu">
        <div className="apl-logo">Admin Dashboard</div>
        <a href="/admin/dashboard" className="apl-menu-item">
          <span className="apl-icon">üì¶</span> Danh s√°ch s·∫£n ph·∫©m
        </a>
        <a href="/admin/orderlist" className="apl-menu-item apl-active">
          <span className="apl-icon">üõí</span> Th·ªëng k√™ ƒë∆°n h√†ng
        </a>
        <a href="/doimk" className="apl-menu-item apl-logout">
          <span className="apl-icon">‚úèÔ∏è</span> ƒê·ªïi m·∫≠t kh·∫©u
        </a>
      </div>

      <div className="apl-content">
        <div className="apl-header">
          <h2>Th·ªëng K√™ ƒê∆°n H√†ng</h2>
        </div>

        <div className="apl-stats">
          <span>Ch√∫ng t√¥i t√¨m th·∫•y {orders.length} ƒë∆°n h√†ng</span>
        </div>

        {orders.length === 0 ? (
          <p>Kh√¥ng c√≥ ƒë∆°n h√†ng n√†o ƒë·ªÉ hi·ªÉn th·ªã.</p>
        ) : (
          <>
            <div className="apl-order-list">
              {orders.map((order) => (
                <div className="apl-product-card" key={order.order_id}>
                  <div className="apl-product-info">
                    <h4>M√£ ƒë∆°n h√†ng: {order.order_id}</h4>
                    <p className="apl-description">
                      Ng√†y t·∫°o: {new Date(order.order_date).toLocaleString()}
                    </p>
                    <p className="apl-price">{formatPrice(order.total_price)} VND</p>
                    <div className="apl-tags">
                      <span className="apl-tag">Tr·∫°ng th√°i: {order.payment_status}</span>
                    </div>
                  </div>
                  <div className="apl-product-actions">
                    <select
                      value={order.payment_status}
                      onChange={(e) => handlePaymentStatusChange(order.order_id, e.target.value)}
                      className="apl-status-select"
                    >
                      <option value="Ch∆∞a thanh to√°n">Ch∆∞a thanh to√°n</option>
                      <option value="ƒê√£ thanh to√°n">ƒê√£ thanh to√°n</option>
                    </select>
                  </div>
                </div>
              ))}
            </div>

            <div className="apl-pagination">
              <button onClick={handlePreviousPage} disabled={page === 1}>
                Trang tr∆∞·ªõc
              </button>
              <span>Trang {page} / {totalPages}</span>
              <button onClick={handleNextPage} disabled={page === totalPages}>
                Trang sau
              </button>
            </div>
          </>
        )}
      </div>
    </div>
  );
}

export default OrderList;